{{#*inline "Column"}}
{{^generated}}@Field({{#if options.nullable}}{ nullable: true }{{/if}})
{{toPropertyName tscName}}{{#if options.nullable}}?{{/if}}:{{tscType}}
{{#if options.nullable}};
{{else if (eq tscType "string")}} = "";
{{else if (eq tscType "number")}} = 0;
{{else if (eq tscType "Date")}} = new Date();
{{else if (eq tscType "boolean")}} = false;
{{/if}}
{{/generated}}
{{/inline}}

{{#*inline "Inputs"}}
@InputType()
export {{defaultExport}} class {{toInputsName tscName}} extends BaseInputFields implements Partial<{{toEntityName tscName}}> {
    {{#columns}}{{> Column}}{{/columns~}}
}
{{/inline}}

import {InputType,Field} from "type-graphql";
import { BaseInputFields } from 'merlin-gql';
import { {{toEntityName tscName}} } from "./{{toEntityFileName tscName}}";

{{> Inputs}}


{{#*inline "ColumnUpdate"}}
{{^generated}}@Field({ nullable: true })
{{toPropertyName tscName}}?:{{tscType}};
{{/generated}}
{{/inline}}

{{#*inline "InputsUpdate"}}
@InputType()
export class {{toInputsUpdateName tscName}} extends BaseInputFields implements Partial<{{toEntityName tscName}}> {
    {{#columns}}{{> ColumnUpdate}}{{/columns~}}
}
{{/inline}}


{{> InputsUpdate}}