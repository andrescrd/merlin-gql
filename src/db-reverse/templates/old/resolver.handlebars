{{#*inline "Resolver"}}
const BaseListResolver = ListResolver({{toEntityName tscName}});
const BaseFindResolver = FindResolver({{toEntityName tscName}});
const BaseCreateResolver = CreateResolver({{toEntityName tscName}});
const BaseUpdateResolver = UpdateResolver({{toEntityName tscName}});
const BaseDeleteResolver = DeleteResolver({{toEntityName tscName}});

@Resolver()
{{#if secureResolvers}}@Secure(){{/if}}
export {{defaultExport}} class {{toEntityName tscName}}ListResolver extends BaseListResolver<{{toEntityName tscName}}, {{toFiltersName tscName}}, {{toSortsName tscName}}> {}

@Resolver()
{{#if secureResolvers}}@Secure(){{/if}}
export class {{toEntityName tscName}}FindResolver extends BaseFindResolver<{{toEntityName tscName}}> {}

@Resolver()
{{#if secureResolvers}}@Secure(){{/if}}
export class {{toEntityName tscName}}UpdateResolver extends BaseUpdateResolver<{{toEntityName tscName}}> {}

@Resolver()
{{#if secureResolvers}}@Secure(){{/if}}
export class {{toEntityName tscName}}CreateResolver extends BaseCreateResolver<{{toEntityName tscName}}> {}

@Resolver()
{{#if secureResolvers}}@Secure(){{/if}}
export class {{toEntityName tscName}}DeleteResolver extends BaseDeleteResolver<{{toEntityName tscName}}> {}
    {{/inline}}

import {Resolver} from "type-graphql";
import { CreateResolver, DeleteResolver, FindResolver, ListResolver, Secure, UpdateResolver } from "merlin-gql";
import { {{toEntityName tscName}} } from "../models/{{toFileName tscName}}/{{toEntityFileName tscName}}";
import {{localImport (toFiltersName tscName)}} from "../models/{{toFileName tscName}}/{{toFileName tscName}}-filter.model";
import {{localImport (toSortsName tscName)}} from "../models/{{toFileName tscName}}/{{toFileName tscName}}-sort.model";

{{> Resolver}}